name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      matrix:
        platform:
          - { name: Windows MSVC, os: windows-latest }
          - { name: Linux GCC, os: ubuntu-latest }
          - { name: MacOS Apple Clang, os: macos-latest }

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libgl-dev xorg-dev libxcb1-dev libx11-dev libx11-xcb-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev libxcb-util-dev libxcb-util0-dev
      - name: Setup Python
        uses: actions/setup-python@v2.3.1
      - name: Install Conan Package Manager
        run: |
          pip install conan -U
          conan profile detect --force
      - name: Configure Conan
        shell: bash
        run: conan install . --build=missing
      - name: Configure CMake
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmake --preset=conan-default
          else
            cmake --preset=conan-release
          fi
      - name: Build
        shell: bash
        run: cmake --build --preset=conan-release
      - name: Test
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cd build/test && ./Release/testCPU.exe
          else
            cd build/Release/test && ./testCPU
          fi
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: ${{ matrix.platform.name }}
          path: |
            ./build/Release/src/NesEmulator
            ./build/src/Release/NesEmulator.exe
